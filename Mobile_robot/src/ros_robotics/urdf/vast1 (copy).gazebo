<?xml version="1.0"?>
<robot>
<!--
  <gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>10.0</updateRate>
  
    <robotBaseFrame>base_footprint</robotBaseFrame>
    <wheelSeparation>1</wheelSeparation>
    <leftFrontJoint>joint_right_top_wheel</leftFrontJoint>
    <rightFrontJoint>joint_right_top_wheel</rightFrontJoint>
    <leftRearJoint>joint_left_bottom_wheel</leftRearJoint>
    <rightRearJoint>joint_right_bottom_wheel</rightRearJoint>
    <wheelDiameter>0.4</wheelDiameter>
    <torque>2.0</torque>
    <MaxForce>5.0</MaxForce>
    <topicName>cmd_vel</topicName>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <broadcastTF>true</broadcastTF>
    <covariance_x>0.001</covariance_x> 
    <covariance_y>0.001</covariance_y> 
    <covariance_yaw>0.01</covariance_yaw>  
  </plugin>
</gazebo>   
-->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <legacyModeNS>true</legacyModeNS>
      <robotNamespace>vast_robot</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <publishWheelJointState>true</publishWheelJointState>
    </plugin>
  </gazebo>

  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <gazebo reference="left_top_wheel">
    <material>Gazebo/Black</material>
	
  </gazebo>
  <gazebo reference="right_top_wheel">
    <material>Gazebo/Black</material>
	
  </gazebo>
  <gazebo reference="left_bottom_wheel">
    <material>Gazebo/Black</material>
	
  </gazebo>
  <gazebo reference="right_bottom_wheel">
    <material>Gazebo/Black</material>
	
  </gazebo>
 
  <!-- astra -->

  <gazebo reference="camera_link">
    <material>Gazebo/Gray</material>
    <sensor type="depth" name="openni_camera_camera">
      <always_on>1</always_on>
      <visualize>true</visualize>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <depth_camera>

        </depth_camera>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin name="kinect_controller" filename="libgazebo_ros_openni_kinect.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>10.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_depth_frame</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>

  <!-- RpLidar using CPU -->
   <gazebo reference="laser">
    <material>Gazebo/Black</material>
    <sensor type="ray" name="head_rplidar_sensor">
      <pose>0 0 0.06 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265</min_angle>
            <max_angle>3.14159265</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.2</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo> 


 

  

   


</robot>
